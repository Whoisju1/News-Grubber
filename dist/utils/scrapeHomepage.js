"use strict";

var request = require('request');

var cheerio = require('cheerio');

module.exports = function () {
  return new Promise(function (resolve, reject) {
    console.log('------------ SCRAPPING ----------');
    var rootURL = 'https://www.cnet.com';
    request(rootURL, function (err, response, body) {
      if (err) reject(err);
      var $ = cheerio.load(body);
      var linkedItems = [];
      $('section div.item').each(function each() {
        // grab needed information from specified element
        var title = $(this).find('h3').text();
        var subTitle = $(this).find('p').text();
        var image = $(this).find('figure > a > span > img').attr('src');
        var url = "".concat(rootURL).concat($(this).find('h3 > a').attr('href')); // only push into array if all the information is available

        if (title && subTitle && image) {
          linkedItems.push({
            title: title,
            subTitle: subTitle,
            image: image,
            url: url
          });
        }
      });
      console.log(JSON.stringify(2, linkedItems, null));
      resolve(linkedItems);
    });
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9zY3JhcGVIb21lcGFnZS5qcyJdLCJuYW1lcyI6WyJyZXF1ZXN0IiwicmVxdWlyZSIsImNoZWVyaW8iLCJtb2R1bGUiLCJleHBvcnRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJjb25zb2xlIiwibG9nIiwicm9vdFVSTCIsImVyciIsInJlc3BvbnNlIiwiYm9keSIsIiQiLCJsb2FkIiwibGlua2VkSXRlbXMiLCJlYWNoIiwidGl0bGUiLCJmaW5kIiwidGV4dCIsInN1YlRpdGxlIiwiaW1hZ2UiLCJhdHRyIiwidXJsIiwicHVzaCIsIkpTT04iLCJzdHJpbmdpZnkiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBQSxTQUNmLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDL0JDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1DQUFaO0FBQ0EsUUFBTUMsT0FBTyxHQUFHLHNCQUFoQjtBQUNBVixJQUFBQSxPQUFPLENBQUNVLE9BQUQsRUFBVSxVQUFDQyxHQUFELEVBQU1DLFFBQU4sRUFBZ0JDLElBQWhCLEVBQXlCO0FBQ3hDLFVBQUlGLEdBQUosRUFBU0osTUFBTSxDQUFDSSxHQUFELENBQU47QUFDVCxVQUFNRyxDQUFDLEdBQUdaLE9BQU8sQ0FBQ2EsSUFBUixDQUFhRixJQUFiLENBQVY7QUFFQSxVQUFNRyxXQUFXLEdBQUcsRUFBcEI7QUFFQUYsTUFBQUEsQ0FBQyxDQUFDLGtCQUFELENBQUQsQ0FBc0JHLElBQXRCLENBQTJCLFNBQVNBLElBQVQsR0FBZ0I7QUFDekM7QUFDQSxZQUFNQyxLQUFLLEdBQUdKLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FDWEssSUFEVyxDQUNOLElBRE0sRUFFWEMsSUFGVyxFQUFkO0FBR0EsWUFBTUMsUUFBUSxHQUFHUCxDQUFDLENBQUMsSUFBRCxDQUFELENBQ2RLLElBRGMsQ0FDVCxHQURTLEVBRWRDLElBRmMsRUFBakI7QUFHQSxZQUFNRSxLQUFLLEdBQUdSLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FDWEssSUFEVyxDQUNOLHlCQURNLEVBRVhJLElBRlcsQ0FFTixLQUZNLENBQWQ7QUFHQSxZQUFNQyxHQUFHLGFBQU1kLE9BQU4sU0FBZ0JJLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FDdEJLLElBRHNCLENBQ2pCLFFBRGlCLEVBRXRCSSxJQUZzQixDQUVqQixNQUZpQixDQUFoQixDQUFULENBWHlDLENBY3pDOztBQUNBLFlBQUlMLEtBQUssSUFBSUcsUUFBVCxJQUFxQkMsS0FBekIsRUFBZ0M7QUFDOUJOLFVBQUFBLFdBQVcsQ0FBQ1MsSUFBWixDQUFpQjtBQUNmUCxZQUFBQSxLQUFLLEVBQUxBLEtBRGU7QUFFZkcsWUFBQUEsUUFBUSxFQUFSQSxRQUZlO0FBR2ZDLFlBQUFBLEtBQUssRUFBTEEsS0FIZTtBQUlmRSxZQUFBQSxHQUFHLEVBQUhBO0FBSmUsV0FBakI7QUFNRDtBQUNGLE9BdkJEO0FBd0JBaEIsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlpQixJQUFJLENBQUNDLFNBQUwsQ0FBZSxDQUFmLEVBQWtCWCxXQUFsQixFQUErQixJQUEvQixDQUFaO0FBQ0FWLE1BQUFBLE9BQU8sQ0FBQ1UsV0FBRCxDQUFQO0FBQ0QsS0FoQ00sQ0FBUDtBQWlDRCxHQXBDRCxDQURlO0FBQUEsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdCcpO1xyXG5jb25zdCBjaGVlcmlvID0gcmVxdWlyZSgnY2hlZXJpbycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAoKSA9PlxyXG4gIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCctLS0tLS0tLS0tLS0gU0NSQVBQSU5HIC0tLS0tLS0tLS0nKTtcclxuICAgIGNvbnN0IHJvb3RVUkwgPSAnaHR0cHM6Ly93d3cuY25ldC5jb20nO1xyXG4gICAgcmVxdWVzdChyb290VVJMLCAoZXJyLCByZXNwb25zZSwgYm9keSkgPT4ge1xyXG4gICAgICBpZiAoZXJyKSByZWplY3QoZXJyKTtcclxuICAgICAgY29uc3QgJCA9IGNoZWVyaW8ubG9hZChib2R5KTtcclxuXHJcbiAgICAgIGNvbnN0IGxpbmtlZEl0ZW1zID0gW107XHJcblxyXG4gICAgICAkKCdzZWN0aW9uIGRpdi5pdGVtJykuZWFjaChmdW5jdGlvbiBlYWNoKCkge1xyXG4gICAgICAgIC8vIGdyYWIgbmVlZGVkIGluZm9ybWF0aW9uIGZyb20gc3BlY2lmaWVkIGVsZW1lbnRcclxuICAgICAgICBjb25zdCB0aXRsZSA9ICQodGhpcylcclxuICAgICAgICAgIC5maW5kKCdoMycpXHJcbiAgICAgICAgICAudGV4dCgpO1xyXG4gICAgICAgIGNvbnN0IHN1YlRpdGxlID0gJCh0aGlzKVxyXG4gICAgICAgICAgLmZpbmQoJ3AnKVxyXG4gICAgICAgICAgLnRleHQoKTtcclxuICAgICAgICBjb25zdCBpbWFnZSA9ICQodGhpcylcclxuICAgICAgICAgIC5maW5kKCdmaWd1cmUgPiBhID4gc3BhbiA+IGltZycpXHJcbiAgICAgICAgICAuYXR0cignc3JjJyk7XHJcbiAgICAgICAgY29uc3QgdXJsID0gYCR7cm9vdFVSTH0keyQodGhpcylcclxuICAgICAgICAgIC5maW5kKCdoMyA+IGEnKVxyXG4gICAgICAgICAgLmF0dHIoJ2hyZWYnKX1gO1xyXG4gICAgICAgIC8vIG9ubHkgcHVzaCBpbnRvIGFycmF5IGlmIGFsbCB0aGUgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlXHJcbiAgICAgICAgaWYgKHRpdGxlICYmIHN1YlRpdGxlICYmIGltYWdlKSB7XHJcbiAgICAgICAgICBsaW5rZWRJdGVtcy5wdXNoKHtcclxuICAgICAgICAgICAgdGl0bGUsXHJcbiAgICAgICAgICAgIHN1YlRpdGxlLFxyXG4gICAgICAgICAgICBpbWFnZSxcclxuICAgICAgICAgICAgdXJsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeSgyLCBsaW5rZWRJdGVtcywgbnVsbCkpO1xyXG4gICAgICByZXNvbHZlKGxpbmtlZEl0ZW1zKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG4iXX0=